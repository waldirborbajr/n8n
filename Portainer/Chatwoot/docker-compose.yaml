version: '3.8'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: .env
    volumes:
      - /data/chatwoot_storage:/app/storage
    networks:
      - chatwoot

  rails:
    <<: *base
    restart: always
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatwoot.rule=Host(`chatwoot.seudominio.com.br`)" #Troque pelo seu Dominio ou Subdominio
      - "traefik.http.routers.chatwoot.entrypoints=web,websecure"
      - "traefik.http.routers.chatwoot.tls.certresolver=leresolver"
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *base
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    restart: always
    volumes:
      - /data/chatwoot_postgres:/var/lib/postgresql/data

    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=senhabanco
    networks:
      - chatwoot

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - /data/chatwoot_redis:/data
    networks:
      - chatwoot

networks:
  chatwoot:
    external: true
