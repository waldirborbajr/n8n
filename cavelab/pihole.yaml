services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pihole
    restart: unless-stopped
    networks:
      - bplus_network

    ports:
      - "192.168.1.19:53:53/tcp"
      - "192.168.1.19:53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8282:82/tcp"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - PIHOLE_DNS_=1.1.1.1;1.0.0.1
      - WEB_PORT=82
      # - WEBPASSWORD='xxxxxx'
      # - DHCP_ACTIVE=true
      # - DHCP_START=192.168.1.3
      # - DHCP_END=192.168.1.254
      # - DHCP_ROUTER=192.168.1.1
      # - DHCP_LEASETIME=24
      # - DHCP_IPV6=false
      # - DHCP_rapid-commit=false
      # - DNSMASQ_LISTENING=all
      # - DNSMASQ_USER=root
      # - DNSSEC=false
      # - CUSTOM_CACHE_SIZE=0
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    # Volumes store your data between container upgrades
    volumes:
      - /var/docker/etc-pihole:/etc/pihole
      - /var/docker/etc-dnsmasq.d:/etc/dnsmasq.d
      - /var/docker/var-log/pihole.log:/var/log/pihole.log
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    labels:
      - "traefik.enable=false"
      # HTTP Routers
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - traefik.http.routers.adguard-rtr.rule=Host(`pihole.${DNS_DOMAIN}`) || Host(`www.pihole.${DNS_DOMAIN}`)
      # Middlewares
      # - "traefik.http.routers.pihole.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.pihole.service=pihole-svc"
      - "traefik.http.services.pihole-svc.loadbalancer.server.port=8282"
      
networks:
  bplus_network:
    name: bplus_network
    external: true
